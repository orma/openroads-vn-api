Description: {{stackName}} Deployer IAM Role
Resources:
  # Deployer User
  DeployerUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: {{stackName}}-user
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Allow writing to s3 buckets
              - Effect: Allow
                Action:
                - sts:AssumeRole
                Resource:
                - !GetAtt DeployerRole.Arn

  DeployerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: !Sub ${AWS::AccountId}
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: DeployerRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
              - cloudformation:*
              Resource:
              - "*"

            - Effect: Allow
              Action:
              - ec2:CreateSecurityGroup
              - ec2:Describe*
              - ec2:DeleteSecurityGroup
              - ec2:RevokeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:createTags
              Resource:
              - "*"

            - Effect: Allow
              Action:
              - s3:*
              Resource:
              - arn:aws:s3:::{{buckets.internal}}
              - arn:aws:s3:::{{buckets.internal}}/*

            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:DeleteLogGroup
                - logs:PutRetentionPolicy
                - logs:PutSubscriptionFilter
                - logs:DescribeLogGroups
              Resource:
                - "*"

            - Effect: Allow
              Action:
              - ecs:CreateCluster
              - ecs:DeleteCluster
              - ecs:RegisterTaskDefinition
              - ecs:DeregisterTaskDefinition
              - ecs:CreateService
              - ecs:DeleteService
              - ecs:Describe*
              - ecs:Update*
              - ecs:List*
              - ecs:Stop*
              Resource:
              - "*"

            - Effect: Allow
              Action:
              - iam:GetRole
              - iam:PassRole
              Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/{{stackName}}*
              - !Sub arn:aws:iam::${AWS::AccountId}:role/{{stackName}}*

            - Effect: Allow
              Action:
              - iam:CreateInstanceProfile
              - iam:PassRole
              - iam:DeleteInstanceProfile
              - iam:AddRoleToInstanceProfile
              - iam:RemoveRoleFromInstanceProfile
              Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/{{stackName}}*

            - Effect: Allow
              Action:
              - autoscaling:CreateLaunchConfiguration
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:DeleteLaunchConfiguration
              - autoscaling:DeleteAutoScalingGroup
              - autoscaling:UpdateAutoScalingGroup
              - autoscaling:SetDesiredCapacity
              - autoscaling:TerminateInstanceInAutoScalingGroup
              - autoscaling:Describe*
              Resource:
              - "*"
Outputs:
  DeployerRoleArn:
    Description: The ARN of the Deployer
    Value: !GetAtt DeployerRole.Arn
  DeployerUser:
    Description: User used for deployment
    Value: !GetAtt DeployerUser.Arn
