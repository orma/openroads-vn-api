version: 2

jobs:
  build:
    #machine: true
    docker:
      - image: docker:17.05.0-ce-git
    working_dir: ~/project
    steps:
      - restore_cache:
          keys:
            - v2-repo-{{ .Branch }}-{{ .Revision }}
            - v2-repo-{{ .Branch }}
            - v2-repo
      - checkout
      - save_cache:
          key: v2-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/project
      - run:
          name: Creating .env for environment variables
          command: |
            echo "AWS_REGION=$AWS_REGION" >> .env
            echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env
            echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env            
            echo "DATABASE_URL=$DATABASE_URL" >> .env
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip=9.0.0-r1
            apk add --update openssl
            pip install docker-compose==1.16.0
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i ~/vn-api-db.tar | true
            docker load -i ~/vn-api-app.tar | true
      - run:
          name: Build docker image
          command: docker-compose build
      - run:
          name: Save Docker image layer cache
          command: |
            docker save -o ~/vn-api-db.tar openroads/vn-api-db:latest
            docker save -o ~/vn-api-app.tar openroads/vn-api-app:latest
      - run:
          name: Start DB
          command: |
            docker-compose up -d db
      - run:
          name: install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz 
            tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://172.18.0.2:5432 -timeout 1m
      - run:
          name: Run tests
          command: |
            docker-compose run api npm test
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              VERSION=`awk -F\' '{print $2,$4}' worker/version.py`
              docker tag openroads/vn-api-db:latest openroads/vn-api-db:$VERSION
              docker tag openroads/vn-api-app:latest openroads/vn-api-app:$VERSION
              docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
              docker push openroads/vn-api-db:$VERSION
              docker push openroads/vn-api-app:$VERSION
              git tag $VERSION
              git push origin $VERSION
              docker-compose run deploy
            fi
