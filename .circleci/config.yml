version: 2

jobs:
  build:
    #docker:
    #  - image: docker/compose:1.16.0
    working_dir: ~/project
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Branch }}-{{ .Revision }}
            - v1-repo-{{ .Branch }}
            - v1-repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/project
      - run:
          name: Creating .env for environment variables
          command: |
            echo "AWS_REGION=$AWS_REGION" >> .env
            echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env
            echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env            
            echo "DATABASE_URL=$DATABASE_URL" >> .env
      - setup_remote_docker
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/project.tar | true
      - run:
          name: Build docker image
          command: docker-compose build
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/project.tar openroads/vn-api-db:0.2.0
            docker save -o /caches/project.tar openroads/vn-api-db:0.2.0
      - run:
          name: Run tests
          command: docker-compose run api npm test
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              VERSION=`awk -F\' '{print $2,$4}' worker/version.py`
              docker tag openroads/vn-api-db:latest openroads/vn-api-db:$VERSION
              docker tag openroads/vn-api-app:latest openroads/vn-api-app:$VERSION
              docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
              docker push openroads/vn-api-db:$VERSION
              docker push openroads/vn-api-app:$VERSION
              git tag $VERSION
              git push origin $VERSION
              docker-compose run deploy
            fi
