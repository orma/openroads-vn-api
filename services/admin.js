'use strict';

/**
 * parses then return all parent ids
 * @param {Number} unitId numeric admin unit id
 * @return {array} array of all of unitId's parents
 */
exports.getParents = function (unitId) {
  let parents = [];
  if (unitId.length === 7) {
    parents.push(Number(unitId.slice(0, 5)));
  } 
  if (unitId.length >= 5) {
    parents.push(Number(unitId.slice(0, 3)));
  }
  return parents;
};

/**
 * takes postgis BOX() string and returns bbox array matching spec needed for orma-vn-analytics
 * @param {string} postgisBOX string representation of postgis BOX(), generated by ST_Extent() function
 * @return {array} bbox array
 */
exports.formatBOX = function (postgisBOX) {
  // take BOX string, and convert it to list of 4 bbox extra as numbers
  return postgisBOX
  // finds coordinates inside BOX(), 
  // then takes match, of spec 'x1 y1, x2 y2', and makes it ['x1 y1', 'x2 y2']
  .match(/\((.*)\)/)[1].split(',')
  // takes ['x1 y1', 'x2 y2'] and turns into [[x1,y1], [x2,y2]], where each in array is a number.
  .map(coordinates => coordinates.split(' ').map(c => Number(c)))
  // flattens to match spec [x1, y1. x2, y2]
  .reduce((a, b) => { return a.concat(b); });
}